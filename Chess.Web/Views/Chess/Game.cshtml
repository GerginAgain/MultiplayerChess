@using Chess.Web.ViewModels
@model GameViewModel

<link href="~/css/chess.css" rel="stylesheet" />
<link href="~/lib/font-awesome/css/all.css" rel="stylesheet" />

@*<script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.js"></script>*@

<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>

@if (Model.Color == "White")
{
    <partial name="_WhitePlayerChessBoardPartial" />
}
else
{
    <partial name="_BlackPlayerChessBoardPartial" />
}


<script type="text/javascript">
    let gameId = @Model.Id;

    var connection = new signalR.HubConnectionBuilder().withUrl("/chessHub").build();
    connection.start().then(() => {
        connection.invoke("AddHostConnectionIdToGame", gameId);
    });

    let isDragEnabled = true;

    connection.on("ReceiveNewMove", function (startId, targetId) {
        let figuretoMove = document.getElementById(startId);
        let targetCell = document.getElementById(targetId);

        if (targetId.startsWith("i")) {
            let targetElementParent = targetCell.parentElement;
            let firstChildElement = targetElementParent.firstElementChild;
            targetElementParent.removeChild(firstChildElement);
            targetElementParent.appendChild(figuretoMove);
        }
        else {
            targetCell.appendChild(figuretoMove);
        }
        
        isDragEnabled = true;
    });

    let targetId = "";
    let startId = "";

    function allowDrop(ev) {
        ev.preventDefault();
    }

    function drag(ev) {
        if (isDragEnabled) {
            ev.dataTransfer.setData("text", ev.target.id);
            startId = ev.target.id;
        }   
    }

    function drop(ev) {
        ev.preventDefault();
        let data = ev.dataTransfer.getData("text");
        let currentFigure = document.getElementById(data);
        let targetElementId = ev.target.id;

        if (targetElementId.startsWith("i")) {
            let targetElementParent = ev.target.parentElement;
            let firstChildElement = targetElementParent.firstElementChild;
            targetElementParent.removeChild(firstChildElement);
            targetElementParent.appendChild(currentFigure);
        }
        else {
            let targetCell = ev.target;
            targetCell.appendChild(currentFigure); 
        }       

        targetId = targetElementId;
        isDragEnabled = false;
        connection.invoke("SendNewMove", startId, targetId, gameId);
    }
</script>