@using Chess.Web.ViewModels
@model GameInputViewModel

<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>

<div class="row justify-content-center">
    @*<form class="col-md-4" >*@
        <div asp-validation-summary="All" class="text-danger"></div>

        <div class="form-group">
            <label asp-for="Color"></label>
            <select id="Color" asp-for="Color" class="form-control" asp-items="@Html.GetEnumSelectList<Color>()"></select>
            <span asp-validation-for="Color" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Name"></label>
            <input id="Name" asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <hr />
        @*<input id="button" type="submit" class="btn btn-primary" value="Create" />*@
        <button id="button">Create</button>
    @*</form>*@
</div>

@section Scripts{
    <partial name="_ValidationScriptsPartial" />
}

<script type="text/javascript">

    var connection = new signalR.HubConnectionBuilder().withUrl("/chessHub").build();
    connection.start();

    let button = document.getElementById("button");
    button.addEventListener("click", function () {
        let name = document.getElementById('Name').value;
        let color = document.getElementById('Color').value;

        var xhttp = new XMLHttpRequest();
        xhttp.open("POST", "/Chess/CreateGame", true);
        xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                connection.invoke("SendNewGame", name, color);
            }
        };
        
        xhttp.send(`name=${name}&color=${color}`);       
    })

    
</script>