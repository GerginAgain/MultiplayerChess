@using Chess.Web.ViewModels
@model GamesViewModel

<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
<link href="~/css/games.css" rel="stylesheet" />

@{ ViewData["Title"] = "Created Games"; }

<h1 class="row justify-content-center text-primary">@ViewData["Title"]</h1>

<div class="row justify-content-center">
    <div id="Games" class="col-md-6">
        @foreach (var game in Model.Games)
        {
            <div id="@game.Id" class="getHover container border border-primary m-3 p-2 rounded-lg" @*onclick="@("window.location.href='" + @Url.Action("EnterGame", "Chess", new { id = game.Id }) + "'");"*@>
                @*<h6 class="justify-content-center">*@
                Game name: @game.Name -> Figure color: @game.Color
                @*</h6>*@
            </div>
        }
    </div>
</div>

<script type="text/javascript">
    document.getElementById("Games").addEventListener("click", addListener);

    function addListener(e) {
        if (e.target !== e.currentTarget) {
            let currentId = e.target.id;
            window.location.href = `EnterGame/${currentId}`;
        }

        e.stopPropagation();
    }

    var connection = new signalR.HubConnectionBuilder().withUrl("/chessHub").build();
    connection.start();

    connection.on("AddNewGame", function (gameName, color, gameId) {
        let gamesElement = document.getElementById("Games");

        let newGameElement = document.createElement("div");
        newGameElement.className = "getHover container border border-primary m-3 p-2 rounded-lg";
        newGameElement.innerHTML = "Game name: " + gameName + " -> " + "Figure color: " + color;   

        newGameElement.addEventListener("click", function () {
            window.location.href = `EnterGame/${gameId}`;   
        });
        gamesElement.appendChild(newGameElement);
    });
</script>