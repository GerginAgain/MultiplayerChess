@using Chess.Web.ViewModels
@model GamesViewModel

<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
<link href="~/css/games.css" rel="stylesheet" />

@{ ViewData["Title"] = "Created Games"; }

<h1 class="row justify-content-center text-primary">@ViewData["Title"]</h1>

<div class="row justify-content-center">
    <div id="Games" class="col-md-6">
        @foreach (var game in Model.Games)
        {
            <div class="getHover container border border-primary m-3 p-2 rounded-lg" onclick="@("window.location.href='" + @Url.Action("EnterGame", "Chess", new { id = game.Id }) + "'");">
                <h6 class="justify-content-center">
                    Game name: @game.Name -> Figure color: @game.Color                  
                </h6>
            </div>
        }
    </div>
</div>

<script type="text/javascript">
    var connection = new signalR.HubConnectionBuilder().withUrl("/chessHub").build();
    connection.start();

    connection.on("AddNewGame", function (name, color) {
        let element = document.getElementById("Games");

        let newDiv = document.createElement("div");
        var htmlAfter = '';

        newDiv.innerHTML = "Game name: " + name + " -> " + "Figure color: " + color;

        element.appendChild(newDiv)
    });
</script>