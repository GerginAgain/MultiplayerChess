@using Chess.Web.ViewModels
@model GameViewModel

<link href="~/css/chess.css" rel="stylesheet" />
<link href="~/lib/font-awesome/css/all.css" rel="stylesheet" />

<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>

<script type="text/javascript">
    var element = document.getElementById("bodyPart");
    element.classList.remove("container");
</script>

<div class="row">
    <div class="col-md-3 border border-primary ml-4 mr-4">
        <partial name="_ChatPartial" />
    </div>
    @if (Model.Color == "White")
    {
    <partial name="_WhitePlayerChessBoardPartial" /> }
    else
    {
    <partial name="_BlackPlayerChessBoardPartial" />}
</div>

<script type="text/javascript">
    let gameId = @Model.Id;
    console.log("gameId is " + gameId);

    var connection = new signalR.HubConnectionBuilder().withUrl("/chessHub").build();
    connection.start().then(() => {
        connection.invoke("AddGuestConnectionIdToGame", gameId);
    });

    let isDragEnabled = false;

    connection.on("ReceiveNewMove", function (startId, targetId) {
        let figuretoMove = document.getElementById(startId);
        let targetCell = document.getElementById(targetId);

        if (targetId.startsWith("i")) {
            let targetElementParent = targetCell.parentElement;
            let firstChildElement = targetElementParent.firstElementChild;
            targetElementParent.removeChild(firstChildElement);
            targetElementParent.appendChild(figuretoMove);
        }
        else {
            targetCell.appendChild(figuretoMove);
        }

        isDragEnabled = true;
    });

    let targetId = "";
    let startId = "";

    function allowDrop(ev) {
        ev.preventDefault();
    }

    function drag(ev) {
        if (isDragEnabled) {
            ev.dataTransfer.setData("text", ev.target.id);
            startId = ev.target.id;
        }
    }

    function drop(ev) { //da naprawq da ne move da se dropwa
        ev.preventDefault();
        let data = ev.dataTransfer.getData("text");
        let currentFigure = document.getElementById(data);
        let targetElementId = ev.target.id;

        if (targetElementId.startsWith("i")) {
            let targetElementParent = ev.target.parentElement;
            let firstChildElement = targetElementParent.firstElementChild;
            targetElementParent.removeChild(firstChildElement);
            targetElementParent.appendChild(currentFigure);
        }
        else {
            let targetCell = ev.target;
            targetCell.appendChild(currentFigure);
        }

        targetId = targetElementId;
        isDragEnabled = false;
        connection.invoke("SendNewMove", startId, targetId, gameId);
    }
</script>

@section Scripts {
    <script>
        connection.on("NewMessage", function (userName, message) {
            var chatInfo = `<div>${userName}: ${escapeHtml(message)}</div>`;
            $("#messagesList").append(chatInfo);
            var messageListElement = $("#messagesList");
            messageListElement.scrollTop = messageListElement.scrollHeight;
        });

        $("#sendButton").click(function () {
            var message = $("#messageInput").val();
            var chatInfo = `<div>Me: ${escapeHtml(message)}</div>`;
            $("#messagesList").append(chatInfo);
            var objDiv = document.getElementById("messagesList");
            objDiv.scrollTop = objDiv.scrollHeight;
            connection.invoke("Send", message, gameId);
            //$("#messageInput").val("");
        });

        $("#messageInput").keyup(function (event) {
            if (event.keyCode === 13 && ($("#messageInput").val() !== "")) {
                event.preventDefault();
                console.log(document.getElementById("messageInput").value)
                $("#sendButton").click();
            }
        });

        function escapeHtml(unsafe) {
            return unsafe
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }
    </script>
}
